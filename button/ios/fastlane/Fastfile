fastlane_version '2.19.1' rescue update_fastlane

default_platform :ios

# Fix: Could not open terminal for stdout: $TERM not set
ENV['TERM'] ||= 'dumb'

require_relative 'utils/globals'
require_relative 'fastlane_utils'
require_relative 'xcode_8_xctestrun'
require_relative 'fbsimctl'
require_relative 'earl_grey_data'
Xcode8.runner = self.runner

SCHEME        = 'buttonTests'
APP_BUNDLE_ID = 'org.reactjs.native.example.button'

platform :ios do

  def install_deps
    execute_action 'yarn' do
      _execute 'cd .. && yarn'
    end

    execute_action 'carthage' do
      _execute 'carthage update EarlGrey --platform ios'
    end
  end

  before_all do
    install_deps if bitrise?
  end

  desc 'Install app deps'
  lane :deps do
    install_deps
  end

  desc 'build-for-testing'
  lane :build_for_testing do
    Xcode8.build_for_testing(scheme: SCHEME)
  end

  desc 'test-without-building no video'
  lane :test_without_building do

    # Error Domain=IDETestOperationsObserverErrorDomain
    # Code=5 "Early unexpected exit, operation never finished bootstrapping - no restart will be attempted"

    # boot simulator before running tests on bitrise.
    # xcrun simctl boot will not boot a full simulator.
    #
    # https://github.com/bitrise-io/steps-xcode-test/blob/2e6d684446eef1a15b9792385c4487ab4fccdc05/xcodeutil/xcodeutil.go#L237
    # https://github.com/bitrise-io/steps-xcode-test/blob/583b25d9fe1a096bf565d4f87cb9365363ee61fd/main.go#L657
    execute_action('boot simulator') do
      simulator_app = '/Applications/Xcode.app/Contents/Developer/Applications/Simulator.app'
      _execute %Q(open "#{simulator_app}" "--args" "-CurrentDeviceUDID" "#{TEST_SIMULATOR.udid}")
      sleep 60
    end

    begin
      Xcode8.test_without_building(scheme: SCHEME)
    ensure
      EarlGreyData.new.collect APP_BUNDLE_ID
    end
  end

  desc %q(test-without-building.
Requires fbsimctl
brew tap facebook/fb
brew install fbsimctl --HEAD)
  lane :test_without_building_video do
    # todo: bitrise errors with Connection refused - connect(2) for "localhost" port 8091 (localhost:8091)
    video_out = File.expand_path(File.join(__dir__, '..', 'video.mp4'))

    video_out = ENV['BITRISE_DEPLOY_DIR'] if bitrise?

    simulator = FBSimctl.new video_out: video_out

    begin
      simulator.start_server
      simulator.start_recording

      Xcode8.test_without_building(scheme: SCHEME)
    ensure
      simulator.stop_recording
      simulator.stop_server
      ui_important "Saved video to: #{video_out}"

      EarlGreyData.new.collect APP_BUNDLE_ID
    end
  end
end
